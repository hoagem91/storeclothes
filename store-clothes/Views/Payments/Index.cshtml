@model store_clothes.Models.PaymentModel

@{
    ViewData["Title"] = "Thanh toán";
    var cartItems = Model.CartItems ?? new List<CartItem>();
    var total = cartItems.Sum(item => (item.Product.Price ?? 0) * item.Quantity);
}

<link rel="stylesheet" href="~/css/checkout/checkout.css" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container checkout-container">
    <div class="checkout-header">
        <h1 class="page-title">Thanh toán đơn hàng</h1>
        <p class="checkout-subtitle">Hoàn tất quá trình mua sắm của bạn</p>
    </div>

    <!-- Main form for COD/Banking -->
    <form asp-action="Index" method="post" class="checkout-form">
        <div class="row">
            <!-- Left: Cart items -->
            <div class="col-md-8">
                <div class="checkout-section">
                    <div class="section-title">Thông tin đơn hàng</div>
                    <div class="table-responsive">
                        <table class="table cart-table">
                            <thead>
                                <tr>
                                    <th>Ảnh</th>
                                    <th>Tên sản phẩm</th>
                                    <th>Giá</th>
                                    <th>Số lượng</th>
                                    <th>Tổng</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in cartItems)
                                {
                                    <tr>
                                        <td><img src="@item.Product.ImageUrl" alt="@item.Product.Name" class="product-img" /></td>
                                        <td><div class="product-name">@item.Product.Name</div></td>
                                        <td>@item.Product.Price?.ToString("N0") đ</td>
                                        <td>@item.Quantity</td>
                                        <td class="item-total">@((item.Product.Price ?? 0) * item.Quantity) đ</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="order-summary">
                        <div class="summary-row">
                            <span>Tổng tiền sản phẩm:</span>
                            <span>@total.ToString("N0") đ</span>
                        </div>
                        <div class="summary-row">
                            <span>Phí vận chuyển:</span>
                            <span>0 đ</span>
                        </div>
                        <div class="summary-row total">
                            <span>Tổng thanh toán:</span>
                            <span>@total.ToString("N0") đ</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right: Form -->
            <div class="col-md-4">
                <div class="checkout-section shipping-details">
                    <div class="section-title">Thông tin giao hàng</div>

                    <div class="form-group">
                        <label asp-for="FullName" class="form-label">Họ và tên</label>
                        <input asp-for="FullName" class="form-control" placeholder="Nhập họ và tên của bạn" />
                        <span asp-validation-for="FullName" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Address" class="form-label">Địa chỉ</label>
                        <input asp-for="Address" class="form-control" placeholder="Nhập địa chỉ nhận hàng" />
                        <span asp-validation-for="Address" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Phone" class="form-label">Số điện thoại</label>
                        <input asp-for="Phone" class="form-control" placeholder="Nhập số điện thoại liên hệ" />
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="PaymentMethod" class="form-label">Phương thức thanh toán</label>
                        <select asp-for="PaymentMethod" class="form-select" id="PaymentMethod">
                            <option value="COD">Thanh toán khi nhận hàng (COD)</option>
                            <option value="Banking">Chuyển khoản ngân hàng</option>
                        </select>
                        <span asp-validation-for="PaymentMethod" class="text-danger"></span>
                    </div>

                    <button type="submit" class="btn-checkout">Xác nhận thanh toán</button>
                </div>
            </div>
        </div>
    </form>
    <!-- Separate MoMo form -->
    <form method="POST" asp-action="CreatePaymentUrl" asp-controller="Payments" class="momo-payment-form">
        <input type="hidden" name="FullName" value="@User.Identity.Name" />
        <input type="hidden" name="Amount" value="@total" />
        <input type="hidden" name="OrderInfo" value="Thanh toán đặt hàng qua Momo tại HieuTanStore" />
        <!-- Hidden cart items to preserve data -->
        @foreach (var item in cartItems)
        {
            <input type="hidden" name="CartItems" value="@System.Text.Json.JsonSerializer.Serialize(new { item.ProductId, item.Quantity, item.Product.Name, PriceValue = item.Product.Price, item.Product.ImageUrl })" />
        }
        <button class="btn-momo mt-3" type="submit">Thanh toán qua MoMo</button>
    </form>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Handle payment method change
            $("#PaymentMethod").change(function () {
                if ($(this).val() === "Banking") {
                    $("#bankingInfo").slideDown();
                } else {
                    $("#bankingInfo").slideUp();
                }
            });

            // Prevent interference with MoMo form
            $(".momo-payment-form").submit(function (e) {
                // Allow default submission to CreatePaymentUrl
            });

            // Handle checkout form submission
            $(".checkout-form").submit(function (e) {
                e.preventDefault(); // Prevent default form submission

                // Validate form
                if (!this.checkValidity()) {
                    $(this).addClass('was-validated');
                    return;
                }

                // Show loading state
                const submitButton = $(this).find('button[type="submit"]');
                const originalText = submitButton.text();
                submitButton.prop('disabled', true).text('Đang xử lý...');

                // Clear cart first
                $.ajax({
                    url: '/Cart/ClearCart',
                    type: 'POST',
                    success: function(response) {
                        if (response.success) {
                            // Generate random transaction ID
                            const transactionId = 'TRX' + Date.now();
                            const paymentInfo = {
                                transactionId: transactionId,
                                paymentDate: new Date().toISOString(),
                                estimatedDeliveryDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString()
                            };
                            
                            // Store payment info in sessionStorage
                            sessionStorage.setItem('paymentInfo', JSON.stringify(paymentInfo));
                            
                            // Redirect to success page
                            window.location.href = '/Payments/Success';
                        } else {
                            alert(response.message || 'Có lỗi xảy ra khi xóa giỏ hàng!');
                            submitButton.prop('disabled', false).text(originalText);
                        }
                    },
                    error: function() {
                        alert('Có lỗi xảy ra khi xóa giỏ hàng!');
                        submitButton.prop('disabled', false).text(originalText);
                    }
                });
            });
        });
    </script>
}